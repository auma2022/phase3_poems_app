{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/phase3/short_poems/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport NavBar from \"./NavBar\";\nimport Books from \"./Books\";\nimport FormPage from \"./FormPage\";\nimport { Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:9292/books`).then(response => response.json()).then(data => {\n      setBooks(data);\n    });\n  }, []);\n\n  function addBooks(newBook) {\n    const updatedBooks = [newBook, ...books];\n    setBooks(updatedBooks);\n  }\n\n  function addReview(newReview) {\n    const bookToUpdate = books.find(book => {\n      return book.id === newReview.book_id;\n    });\n    const updatedReviews = [newReview, ...bookToUpdate.reviews];\n    bookToUpdate.reviews = updatedReviews;\n    setBooks(books.map(book => book.id === bookToUpdate.id ? bookToUpdate : book));\n    setReviews(updatedReviews);\n  }\n\n  function handleUpdateLikes(updateLikes) {\n    const updatedLikes = books.map(book => {\n      return book.id === updateLikes.id ? updateLikes : book;\n    });\n    setBooks(updatedLikes);\n  }\n\n  function handleDeleteReview(deletedReview) {\n    const bookToUpdate = books.find(book => {\n      return book.id === deletedReview.book_id;\n    });\n    const updatedReview = bookToUpdate.reviews.filter(review => {\n      return review.id !== deletedReview.id;\n    });\n    bookToUpdate.reviews = updatedReview;\n    setBooks(books.map(book => book.id === bookToUpdate.id ? bookToUpdate : book));\n    setReviews(updatedReview);\n  }\n\n  const booksToDisplay = books.filter(book => {\n    return book.title.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/books\",\n      children: /*#__PURE__*/_jsxDEV(Books, {\n        handleUpdateLikes: handleUpdateLikes,\n        addReview: addReview,\n        books: books,\n        booksToDisplay: booksToDisplay,\n        searchTerm: searchTerm,\n        onSearch: setSearchTerm,\n        handleDeleteReview: handleDeleteReview,\n        reviews: reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/formpage\",\n      children: /*#__PURE__*/_jsxDEV(FormPage, {\n        addBooks: addBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6ikPEIsVfb7ZTuTTRAE293ZPFKg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/moringa/Documents/phase3/short_poems/src/App.js"],"names":["Home","NavBar","Books","FormPage","Route","useState","useEffect","App","books","setBooks","reviews","setReviews","searchTerm","setSearchTerm","fetch","then","response","json","data","addBooks","newBook","updatedBooks","addReview","newReview","bookToUpdate","find","book","id","book_id","updatedReviews","map","handleUpdateLikes","updateLikes","updatedLikes","handleDeleteReview","deletedReview","updatedReview","filter","review","booksToDisplay","title","toLowerCase","includes"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Home from \"./Home\";\nimport NavBar from \"./NavBar\";\nimport Books from \"./Books\";\nimport FormPage from \"./FormPage\";\nimport { Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:9292/books`)\n      .then((response) => response.json())\n      .then((data) => {\n        setBooks(data);\n      });\n  }, []);\n\n  function addBooks(newBook) {\n    const updatedBooks = [newBook, ...books];\n    setBooks(updatedBooks);\n  }\n\n  function addReview(newReview) {\n    const bookToUpdate = books.find((book) => {\n      return book.id === newReview.book_id;\n    });\n\n    const updatedReviews = [newReview, ...bookToUpdate.reviews];\n    bookToUpdate.reviews = updatedReviews;\n    setBooks(\n      books.map((book) => (book.id === bookToUpdate.id ? bookToUpdate : book))\n    );\n\n    setReviews(updatedReviews);\n  }\n\n  function handleUpdateLikes(updateLikes) {\n    const updatedLikes = books.map((book) => {\n      return book.id === updateLikes.id ? updateLikes : book;\n    });\n    setBooks(updatedLikes);\n  }\n  function handleDeleteReview(deletedReview) {\n    const bookToUpdate = books.find((book) => {\n      return book.id === deletedReview.book_id;\n    });\n\n    const updatedReview = bookToUpdate.reviews.filter((review) => {\n      return review.id !== deletedReview.id;\n    });\n\n    bookToUpdate.reviews = updatedReview;\n    setBooks(\n      books.map((book) => (book.id === bookToUpdate.id ? bookToUpdate : book))\n    );\n    setReviews(updatedReview);\n  }\n\n  const booksToDisplay = books.filter((book) => {\n    return book.title.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <br />\n      <Route path=\"/books\">\n        <Books\n          handleUpdateLikes={handleUpdateLikes}\n          addReview={addReview}\n          books={books}\n          booksToDisplay={booksToDisplay}\n          searchTerm={searchTerm}\n          onSearch={setSearchTerm}\n          handleDeleteReview={handleDeleteReview}\n          reviews={reviews}\n        />\n      </Route>\n      <Route path=\"/formpage\">\n        <FormPage addBooks={addBooks} />\n      </Route>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}