{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/phase3/phase3_poems_app/src/EachBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddReview from \"./AddReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EachBook = _ref => {\n  _s();\n\n  var _book$reviews;\n\n  let {\n    book,\n    handleUpdateLikes,\n    handleDeleteReview,\n    addReview\n  } = _ref;\n  const [displayReview, setDisplayReview] = useState(false);\n\n  const showReview = event => {\n    event.preventDefault();\n    setDisplayReview(!displayReview);\n  };\n\n  function updateLikes() {\n    const addLikes = {\n      likes: book.likes + 1\n    };\n    fetch(`https://poem-books.herokuapp.com/books/${book.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addLikes)\n    }).then(response => response.json()).then(handleUpdateLikes);\n  }\n\n  function deleteReview(id) {\n    fetch(`http://localhost:9292/reviews/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => handleDeleteReview(data));\n  }\n\n  const eachReview = (_book$reviews = book.reviews) === null || _book$reviews === void 0 ? void 0 : _book$reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"noBullet\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: () => deleteReview(review.id),\n      children: [\"\\u2716\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), review.text]\n  }, review.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: book.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: updateLikes,\n        children: [\"Likes: \", book.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: showReview,\n        children: displayReview ? \"Hide Reviews\" : \"Show Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), displayReview ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: eachReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(AddReview, {\n        book: book,\n        addReview: addReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EachBook, \"Y6cthZ3Rw6+3NC6aSDIvUDMMR2Y=\");\n\n_c = EachBook;\nexport default EachBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachBook\");","map":{"version":3,"sources":["/home/moringa/Documents/phase3/phase3_poems_app/src/EachBook.js"],"names":["React","useState","AddReview","EachBook","book","handleUpdateLikes","handleDeleteReview","addReview","displayReview","setDisplayReview","showReview","event","preventDefault","updateLikes","addLikes","likes","fetch","id","method","headers","body","JSON","stringify","then","response","json","deleteReview","data","eachReview","reviews","map","review","text","title","author"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AddReview from \"./AddReview\";\n\nconst EachBook = ({\n  book,\n  handleUpdateLikes,\n  handleDeleteReview,\n\n  addReview,\n}) => {\n  const [displayReview, setDisplayReview] = useState(false);\n\n  const showReview = (event) => {\n    event.preventDefault();\n    setDisplayReview(!displayReview);\n  };\n\n  function updateLikes() {\n    const addLikes = {\n      likes: book.likes + 1,\n    };\n\n    fetch(`https://poem-books.herokuapp.com/books/${book.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(addLikes),\n    })\n      .then((response) => response.json())\n      .then(handleUpdateLikes);\n  }\n\n  function deleteReview(id) {\n    fetch(`http://localhost:9292/reviews/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => handleDeleteReview(data));\n  }\n\n  const eachReview = book.reviews?.map((review) => (\n    <li className=\"noBullet\" key={review.id}>\n      {/* <br /> */}\n      <button className=\"deleteButton\" onClick={() => deleteReview(review.id)}>\n        âœ–{\" \"}\n      </button>\n      {review.text}\n    </li>\n  ));\n\n  return (\n    <>\n      <div className=\"bookCard\">\n        <h3>{book.title}</h3>\n        <h4>{book.author}</h4>\n\n        <button className=\"button\" onClick={updateLikes}>\n          Likes: {book.likes}\n        </button>\n        <br />\n        <button className=\"button\" onClick={showReview}>\n          {displayReview ? \"Hide Reviews\" : \"Show Reviews\"}\n        </button>\n\n        {displayReview ? <ul>{eachReview}</ul> : null}\n        <AddReview book={book} addReview={addReview} />\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default EachBook;\n"]},"metadata":{},"sourceType":"module"}