{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/phase3/short_poems/src/AddReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddReview = _ref => {\n  _s();\n\n  let {\n    addReview,\n    book\n  } = _ref;\n  const [newReview, setNewReview] = useState({\n    text: \"\",\n    book_id: book.id\n  });\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setNewReview({ ...newReview,\n      [name]: value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const addNewReview = {\n      text: newReview.text,\n      book_id: newReview.book_id\n    };\n    fetch(`http://localhost:9292/books/${book.id}/reviews`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addNewReview)\n    }).then(response => response.json()).then(data => addReview(data));\n    setNewReview({\n      text: \"\",\n      book_id: newReview.book_id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Add new review here: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Review\",\n        name: \"text\",\n        value: newReview.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddReview, \"gDSXUJ7c+RVxrmqtp+qjnjPtSyQ=\");\n\n_c = AddReview;\nexport default AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/home/moringa/Documents/phase3/short_poems/src/AddReview.js"],"names":["React","useState","AddReview","addReview","book","newReview","setNewReview","text","book_id","id","handleChange","e","name","target","value","handleSubmit","preventDefault","addNewReview","fetch","method","headers","body","JSON","stringify","then","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAwB;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC;AACzCM,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,OAAO,EAAEJ,IAAI,CAACK;AAF2B,GAAD,CAA1C;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AAEAR,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,OAACO,IAAD,GAAQE;AAAxB,KAAD,CAAZ;AACD,GALD;;AAMA,WAASC,YAAT,CAAsBJ,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,YAAY,GAAG;AACnBV,MAAAA,IAAI,EAAEF,SAAS,CAACE,IADG;AAEnBC,MAAAA,OAAO,EAAEH,SAAS,CAACG;AAFA,KAArB;AAKAU,IAAAA,KAAK,CAAE,+BAA8Bd,IAAI,CAACK,EAAG,UAAxC,EAAmD;AACtDU,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AALgD,KAAnD,CAAL,CAOGO,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,IAAD,IAAUxB,SAAS,CAACwB,IAAD,CAR3B;AASArB,IAAAA,YAAY,CAAC;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAEH,SAAS,CAACG;AAFR,KAAD,CAAZ;AAID;;AACD,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEO,YAAjC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEV,SAAS,CAACE,IAJnB;AAKE,QAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnDD;;GAAMR,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AddReview = ({ addReview, book }) => {\n  const [newReview, setNewReview] = useState({\n    text: \"\",\n    book_id: book.id,\n  });\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setNewReview({ ...newReview, [name]: value });\n  };\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const addNewReview = {\n      text: newReview.text,\n      book_id: newReview.book_id,\n    };\n\n    fetch(`http://localhost:9292/books/${book.id}/reviews`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(addNewReview),\n    })\n      .then((response) => response.json())\n      .then((data) => addReview(data));\n    setNewReview({\n      text: \"\",\n      book_id: newReview.book_id,\n    });\n  }\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h5>Add new review here: </h5>\n\n        <textarea\n          type=\"text\"\n          placeholder=\"Review\"\n          name=\"text\"\n          value={newReview.text}\n          onChange={handleChange}\n        ></textarea>\n\n        <br />\n        <input className=\"button\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}